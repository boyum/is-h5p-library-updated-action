{"version":3,"file":"index.js","mappings":";AAAA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://is-h5p-library-updated-action/webpack/runtime/compat","../webpack://is-h5p-library-updated-action/./lib/main.js"],"sourcesContent":["\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst github = __importStar(require(\"@actions/github\"));\nconst path_1 = require(\"path\");\nconst git_helpers_1 = require(\"./helpers/git.helpers\");\nconst version_helpers_1 = require(\"./helpers/version.helpers\");\nconst MAIN_DIRECTORY = \"main\";\nconst CURRENT_BRANCH_DIRECTORY = \"current-branch\";\nconst options = {\n    githubToken: \"github-token\",\n    failIfNotAhead: \"fail-if-not-ahead\",\n    workingDirectory: \"working-directory\",\n};\nconst outputs = {\n    isAhead: \"is-ahead\",\n    areEqual: \"are-equal\",\n    isBehind: \"is-behind\",\n    currentVersion: \"current-version\",\n    mainVersion: \"main-version\",\n    currentVersionFormatted: \"current-version-formatted\",\n    mainVersionFormatted: \"main-version-formatted\",\n};\nasync function run() {\n    try {\n        const githubToken = core.getInput(options.githubToken);\n        const failIfNotAhead = core.getInput(options.failIfNotAhead) === \"true\";\n        const workingDirectory = core.getInput(options.workingDirectory);\n        core.info(`Ref: '${github.context.ref}'`);\n        core.info(`Event name: '${github.context.eventName}'`);\n        core.info(`Action: '${github.context.action}'`);\n        core.info(\"Options:\");\n        core.info(`${options.failIfNotAhead}: '${failIfNotAhead}'`);\n        core.info(`${options.workingDirectory}: '${workingDirectory}'`);\n        await (0, git_helpers_1.checkoutMain)(MAIN_DIRECTORY);\n        await (0, git_helpers_1.checkoutCurrentBranch)(CURRENT_BRANCH_DIRECTORY, githubToken);\n        const mainLibrary = (0, path_1.join)(MAIN_DIRECTORY, workingDirectory);\n        const mainVersion = await (0, version_helpers_1.findLibraryVersion)(mainLibrary);\n        const currentBranchLibrary = (0, path_1.join)(CURRENT_BRANCH_DIRECTORY, workingDirectory);\n        const currentBranchVersion = await (0, version_helpers_1.findLibraryVersion)(currentBranchLibrary);\n        const versionDiff = (0, version_helpers_1.versionDifference)(currentBranchVersion, mainVersion);\n        const isAhead = versionDiff === 1;\n        const areEqual = versionDiff === 0;\n        const isBehind = versionDiff === -1;\n        core.setOutput(outputs.isAhead, isAhead);\n        core.setOutput(outputs.areEqual, areEqual);\n        core.setOutput(outputs.isBehind, isBehind);\n        core.setOutput(outputs.currentVersion, currentBranchVersion);\n        core.setOutput(outputs.mainVersion, mainVersion);\n        core.setOutput(outputs.currentVersionFormatted, (0, version_helpers_1.formatVersion)(currentBranchVersion));\n        core.setOutput(outputs.mainVersionFormatted, (0, version_helpers_1.formatVersion)(mainVersion));\n        if (failIfNotAhead && !isAhead) {\n            core.setFailed(`Current branch's version is not ahead of main branch.\n      Remember to update \\`library.json\\`.\n      Current branch version: ${(0, version_helpers_1.formatVersion)(currentBranchVersion)}.\n      Main version: ${(0, version_helpers_1.formatVersion)(mainVersion)}`);\n        }\n    }\n    catch (error) {\n        if (error instanceof Error)\n            core.setFailed(error.message);\n    }\n}\nrun();\n"],"names":[],"sourceRoot":""}